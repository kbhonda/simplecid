\NeedsTeXFormat{pLaTeX2e}
\RequirePackage{expl3}
\ProvidesExplPackage{simplecid}{2021/2/21}{v0.1}{using CID for output letter}


\cs_if_exist:NTF \Cjscale {} {\def\Cjscale{9.62216}}

\int_const:Nn \l_sCID_subtfm_int {4}

%% for default min and gt 
\tl_set:Nn \l_sCID_default_minfont_tl  {HaranoAjiMincho-Regular.otf}
\tl_set:Nn \l_sCID_default_gothfont_tl {HaranoAjiGOthic-Medium.otf}

\cs_new:Npn \sCIDSetting #1{
   \tl_set:Nn \l_tmpa_tl {#1} 
   \regex_replace_all:nnN {  ([-=]+\s*)+>  } {=} \l_tmpa_tl
   \exp_args:NNx\prop_set_from_keyval:Nn \l_tmpa_prop {\tl_use:N\l_tmpa_tl}
   \exp_args:NNx\prop_set_from_keyval:Nn \l_sCID_font_names_prop 
                                         {\prop_item:Nn \l_tmpa_prop {font~names}}
   \exp_args:NNx\prop_set_from_keyval:Nn \l_sCID_NFSS_names_prop 
                                         {\prop_item:Nn \l_tmpa_prop {NFSS~names}}
   \exp_args:NNx\prop_put_if_new:Nnn \l_sCID_font_names_prop {\l_sCID_default_minfont_tl}  {min}
   \exp_args:NNx\prop_put_if_new:Nnn \l_sCID_font_names_prop {\l_sCID_default_gothfont_tl} {goth}
   \prop_put_if_new:Nnn \l_sCID_NFSS_names_prop {JY1/mc/m/n}  {min}
   \prop_put_if_new:Nnn \l_sCID_NFSS_names_prop {JY1/gt/m/n}  {goth}
   \prop_put_if_new:Nnn \l_sCID_NFSS_names_prop {JY1/mc/bx/n} {goth}
%%% l_font_names_prop : actual name of fonts -> ID
%%% l_NFSS_names_prop : NFSS name of fonts   -> ID
   \prop_map_inline:Nn \l_sCID_NFSS_names_prop {
      \regex_split:nnN{/}{##1} \l_sCID_NFSS_seq
      \tl_set:cx {l_sCID_##1_tl} { \prop_item:Nn \l_sCID_NFSS_names_prop {##1} }%
      \int_step_inline:nnn{0}{\int_eval:n {\l_sCID_subtfm_int - 1} }{
            \DeclareFontShape{\seq_item:Nn \l_sCID_NFSS_seq {1}}
                             {\seq_item:Nn \l_sCID_NFSS_seq {2}}
                             {\seq_item:Nn \l_sCID_NFSS_seq {3}}
                             {\seq_item:Nn \l_sCID_NFSS_seq {4}\two@digits{####1}}
                             {<-> s*[\Cjascale] scid\tl_use:c{l_sCID_##1_tl}-\two@digits{####1}}{}
            \DeclareFontShape{JT1}
                             {\seq_item:Nn \l_sCID_NFSS_seq {2}}
                             {\seq_item:Nn \l_sCID_NFSS_seq {3}}
                             {\seq_item:Nn \l_sCID_NFSS_seq {4}\two@digits{####1}}
                             {<-> ssub* mc/m/n }{}
         }
      }
}


\int_new:N \l_sCID_n_int
\int_new:N \l_sCID_r_int
\int_new:N \l_sCID_ku_int
\int_new:N \l_sCID_ten_int

\msg_new:nnnn{sCID}{unsetted~font}
                   {\msg_error_text:n{#1}^^J
                    Unsetted~font~is~used~for~\token_to_str:N\sCID\space \msg_line_context:.}
                   {\msg_info_text:n {#1}^^J
                    Set~the~ID~and~actual~font~for~
                    \k@encoding/\k@family/\k@series/\k@shape\space Using~\token_to_str:N\sCIDSetting.} 

\cs_gset:Npn \sCID #1 {
\char\jis"2121\kern-1zw%% guard by jghost begin
\group_begin:    
   \int_set:Nn \l_sCID_n_int   {\int_div_truncate:nn {#1-1} {8836}}
   \int_set:Nn \l_sCID_r_int   {\int_mod:nn {#1-1} {8836}}
   \int_set:Nn \l_sCID_ku_int  {\int_div_truncate:nn {\l_sCID_r_int} {94} + 1}
   \int_set:Nn \l_sCID_ten_int {\int_mod:nn {\l_sCID_r_int} {94} + 1}
   \cs_if_exist:cTF{\k@encoding/\k@family/\k@series/\k@shape\two@digits{\l_sCID_n_int}}
                   {\kanjishape{\k@shape\two@digits{\l_sCID_n_int}}\selectfont}
                   {\msg_error:nnn{sCID}{unsetted~font}{simplecid}}
   \char\jis\int_eval:n{(\l_sCID_ku_int + 32) * 256 + (\l_sCID_ten_int + 32)}
\group_end:
\kern-1zw\char\jis"2121%% guard by jghost end
}

\endinput